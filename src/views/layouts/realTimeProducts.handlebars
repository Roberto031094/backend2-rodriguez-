<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en Tiempo Real</title>
</head>
<body>
    <header>
        <h1>Lista de Productos en Tiempo Real</h1>
    </header>

    <section id="add-product-form">
        <h2>Agregar Producto</h2>
        <form id="productForm">
            <label for="title">Título:</label>
            <input type="text" id="title" name="title" required><br>
            <label for="price">Precio:</label>
            <input type="number" id="price" name="price" required><br>
            <label for="description">Descripción:</label>
            <input type="text" id="description" name="description" required><br>
            <label for="stock">Stock:</label>
            <input type="number" id="stock" name="stock" required><br>
            <label for="code">Código:</label>
            <input type="text" id="code" name="code" required><br>
            <label for="category">Categoría:</label>
            <input type="text" id="category" name="category" required><br>
            <label for="thumbnails">Thumbnails:</label>
            <input type="text" id="thumbnails" name="thumbnails" placeholder="URL de imagen"><br>
            <button type="submit">Agregar Producto</button>
        </form>
    </section>

    <section id="product-list">
        <ul>
            {{#each products}}
            <li id="product-{{this.id}}"> 
                <h2>{{this.title}}</h2>
                <p>Precio: {{this.price}}</p>
                <p>Descripción: {{this.description}}</p>
                <p>Stock: {{this.stock}}</p>
                <p>Código: {{this.code}}</p>
                <p>Categoría: {{this.category}}</p>
                <p>Imagen: {{this.thumbnails}}</p>
                <button class="delete-button" data-id="{{this.id}}">Borrar Producto</button> <!-- Botón para borrar el producto -->
            </li>
            {{/each}}
        </ul>
    </section>

    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/uuid/8.3.2/uuid.min.js"></script>
    <script>
        const socket = io(); 

        socket.on('productAdded', (newProduct) => {
            const productListElement = document.getElementById('product-list').getElementsByTagName('ul')[0];
            const productItem = `
                <li id="product-${newProduct.id}">
                    <h2>${newProduct.title}</h2>
                    <p>Precio: ${newProduct.price}</p>
                    <p>Descripción: ${newProduct.description}</p>
                    <p>Stock: ${newProduct.stock}</p>
                    <p>Código: ${newProduct.code}</p>
                    <p>Categoría: ${newProduct.category}</p>
                    <p>Imagen: ${newProduct.thumbnails}</p>
                    <button class="delete-button" data-id="${newProduct.id}">Borrar Producto</button>
                </li>`;
            productListElement.innerHTML += productItem;

            // Agregar el evento de borrar producto al nuevo botón
            addDeleteButtonListener();
        });

        socket.on('productDeleted', (deletedProductId) => {
            const productElement = document.getElementById(`product-${deletedProductId}`);
            if (productElement) {
                productElement.remove();
            }
        });

        const productForm = document.getElementById('productForm');
        productForm.addEventListener('submit', (event) => {
            event.preventDefault(); 

            const newProduct = {
                id: uuid.v4(), 
                title: document.getElementById('title').value,
                price: document.getElementById('price').value,
                description: document.getElementById('description').value,
                stock: document.getElementById('stock').value,
                code: document.getElementById('code').value,
                category: document.getElementById('category').value,
                thumbnails: [document.getElementById('thumbnails').value],
            };

            socket.emit('addProduct', newProduct);

            productForm.reset();
        });

        function addDeleteButtonListener() {
            const deleteButtons = document.querySelectorAll('.delete-button');
            deleteButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const productId = event.target.getAttribute('data-id');
                    socket.emit('deleteProduct', productId); // Enviar evento para eliminar el producto
                });
            });
        }

        // Inicializar la escucha de los botones de eliminar para los productos ya renderizados
        addDeleteButtonListener();
    </script>
</body>
</html>
